name: Build and Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

concurrency:
  group: build-and-deploy
  cancel-in-progress: true

jobs:
  # 1) Test Code with the reusable workflow
  test-code:
    uses: ./.github/workflows/test-swift.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  # 2) Build, Scan, and Push - waits for tests
  build-scan-and-push:
    name: Build, Scan, and Push Docker Image
    runs-on: ubuntu-latest
    needs: test-code

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Retrieve AWS Secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker_secrets=$(aws secretsmanager get-secret-value \
            --secret-id docker-credentials \
            --query SecretString \
            --output text)
    
          echo "USERNAME=$(echo "$docker_secrets" | jq -r .USERNAME)" >> $GITHUB_ENV
          echo "PASSWORD=$(echo "$docker_secrets" | jq -r .PASSWORD)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
    
      - name: Build Docker Image for ExoplanetTerminal
        run: |
          docker build -t rpairo/exoplanet-terminal:latest .
      
      - name: Scan Docker Image for ExoplanetTerminal
        uses: docker/scout-action@v1
        with:
          command: cves
          image: rpairo/exoplanet-terminal:latest
          only-severities: critical,high
          exit-code: true
      
      - name: Push Docker Image for ExoplanetTerminal
        if: success()
        run: |
          docker push rpairo/exoplanet-terminal:latest