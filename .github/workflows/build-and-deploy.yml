name: Build, Scan, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-scan-and-push:
    name: Build, Scan, and Push Docker Images
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Swift
        uses: swiftorg/actions/setup-swift@v1
        with:
          swift-version: 6.0.3  # Usando la misma versiÃ³n que ExoplanetAnalyzer

      - name: Retrieve AWS Secrets
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker_secrets=$(aws secretsmanager get-secret-value \
            --secret-id docker-credentials \
            --query SecretString \
            --output text)
    
          echo "USERNAME=$(echo "$docker_secrets" | jq -r .USERNAME)" >> $GITHUB_ENV
          echo "PASSWORD=$(echo "$docker_secrets" | jq -r .PASSWORD)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
    
      - name: Build Docker Image for ExoplanetAPI
        run: |
          docker build -t rpairo/exoplanets-api:latest .
    
      - name: Scan Docker Image for ExoplanetAPI
        uses: docker/scout-action@v1
        with:
          command: cves
          image: rpairo/exoplanets-api:latest
          only-severities: critical,high
          exit-code: true
    
      - name: Push Docker Image for ExoplanetAPI
        if: success()
        run: |
          docker push rpairo/exoplanets-api:latest